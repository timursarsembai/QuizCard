<?php
/**
 * –ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ email
 */

error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ email</h1>";

echo "<h2>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—Ä–æ—Å–µ:</h2>";
echo "–ú–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞: " . $_SERVER['REQUEST_METHOD'] . "<br>";
echo "URL: " . $_SERVER['REQUEST_URI'] . "<br>";
echo "User Agent: " . ($_SERVER['HTTP_USER_AGENT'] ?? '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω') . "<br>";

$token = $_GET['token'] ?? '';
echo "–¢–æ–∫–µ–Ω: " . htmlspecialchars($token) . "<br>";
echo "–î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞: " . strlen($token) . "<br>";

if (empty($token)) {
    echo "<div style='background: #f8d7da; padding: 10px; border-radius: 5px; color: #721c24;'>";
    echo "‚ùå –¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –≤ URL";
    echo "</div>";
    exit;
}

echo "<h2>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î:</h2>";
try {
    require_once 'config/database.php';
    require_once 'classes/User.php';
    
    $database = new Database();
    $db = $database->getConnection();
    
    if (!$database->isConnected()) {
        throw new Exception('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î: ' . $database->getError());
    }
    
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ<br>";
    
    $user = new User($db);
    echo "‚úÖ –ö–ª–∞—Å—Å User –∑–∞–≥—Ä—É–∂–µ–Ω<br>";
    
    echo "<h2>–ü–æ–∏—Å–∫ —Ç–æ–∫–µ–Ω–∞ –≤ –ë–î:</h2>";
    
    // –ò—â–µ–º —Ç–æ–∫–µ–Ω
    $query = "SELECT id, email, verification_token_expires, email_verified, first_name, last_name 
              FROM users 
              WHERE verification_token = :token 
              AND role = 'teacher'";
    
    $stmt = $db->prepare($query);
    $stmt->bindParam(':token', $token);
    $stmt->execute();
    
    $user_record = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$user_record) {
        echo "<div style='background: #f8d7da; padding: 10px; border-radius: 5px; color: #721c24;'>";
        echo "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º —Ç–æ–∫–µ–Ω–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω";
        echo "</div>";
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ —Ç–∞–∫–æ–π —Ç–æ–∫–µ–Ω –≤ –ë–î
        $check_query = "SELECT COUNT(*) FROM users WHERE verification_token = :token";
        $check_stmt = $db->prepare($check_query);
        $check_stmt->bindParam(':token', $token);
        $check_stmt->execute();
        $token_exists = $check_stmt->fetchColumn();
        
        if ($token_exists > 0) {
            echo "<p>‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω –≤ –ë–î, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º</p>";
        } else {
            echo "<p>‚ö†Ô∏è –¢–æ–∫–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ë–î</p>";
        }
        
    } else {
        echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:<br>";
        echo "ID: " . $user_record['id'] . "<br>";
        echo "Email: " . htmlspecialchars($user_record['email']) . "<br>";
        echo "–ò–º—è: " . htmlspecialchars($user_record['first_name'] . ' ' . $user_record['last_name']) . "<br>";
        echo "Email —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: " . ($user_record['email_verified'] ? '–î–∞' : '–ù–µ—Ç') . "<br>";
        echo "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞: " . ($user_record['verification_token_expires'] ?? '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω') . "<br>";
        
        if ($user_record['email_verified']) {
            echo "<div style='background: #fff3cd; padding: 10px; border-radius: 5px; color: #856404;'>";
            echo "‚ö†Ô∏è Email —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω —Ä–∞–Ω–µ–µ";
            echo "</div>";
        } else {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
            if ($user_record['verification_token_expires'] && strtotime($user_record['verification_token_expires']) < time()) {
                echo "<div style='background: #f8d7da; padding: 10px; border-radius: 5px; color: #721c24;'>";
                echo "‚ùå –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞ –∏—Å—Ç–µ–∫";
                echo "</div>";
            } else {
                echo "<div style='background: #d4edda; padding: 10px; border-radius: 5px; color: #155724;'>";
                echo "‚úÖ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, –º–æ–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å email";
                echo "</div>";
                
                echo "<h2>–¢–µ—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:</h2>";
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
                $result = $user->verifyEmail($token);
                
                if ($result['success']) {
                    echo "<div style='background: #d4edda; padding: 10px; border-radius: 5px; color: #155724;'>";
                    echo "üéâ Email —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!";
                    echo "</div>";
                } else {
                    echo "<div style='background: #f8d7da; padding: 10px; border-radius: 5px; color: #721c24;'>";
                    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " . ($result['reason'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
                    echo "</div>";
                }
            }
        }
    }
    
} catch (Exception $e) {
    echo "<div style='background: #f8d7da; padding: 10px; border-radius: 5px; color: #721c24;'>";
    echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage();
    echo "</div>";
    echo "<pre>" . $e->getTraceAsString() . "</pre>";
}

echo "<hr>";
echo "<p><a href='verify_email.php?token=" . urlencode($token) . "'>üîÑ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–±—ã—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏</a></p>";
echo "<p><a href='login.php'>üè† –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞</a></p>";
?>
