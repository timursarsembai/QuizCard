<?php
// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–µ–∑ email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
error_reporting(E_ALL);
ini_set('display_errors', 1);

session_start();

$message = '';
$error = '';

if ($_POST && isset($_POST['test_register'])) {
    try {
        require_once 'config/database.php';
        require_once 'classes/User.php';
        
        $database = new Database();
        $db = $database->getConnection();
        
        if (!$database->isConnected()) {
            throw new Exception('DB connection failed: ' . $database->getError());
        }
        
        $user = new User($db);
        
        $username = trim($_POST['username']);
        $password = $_POST['password'];
        $first_name = trim($_POST['first_name']);
        $last_name = trim($_POST['last_name']);
        $email = trim($_POST['email']);
        
        echo "<h3>–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h3>";
        echo "Username: " . htmlspecialchars($username) . "<br>";
        echo "Email: " . htmlspecialchars($email) . "<br>";
        echo "First name: " . htmlspecialchars($first_name) . "<br>";
        echo "Last name: " . htmlspecialchars($last_name) . "<br>";
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∏
        if (empty($username) || empty($first_name) || empty($last_name)) {
            throw new Exception('–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã');
        }
        
        if (strlen($password) < 6) {
            throw new Exception('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤');
        }
        
        if (empty($email)) {
            throw new Exception('Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω');
        }
        
        if ($user->isUsernameExists($username)) {
            throw new Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
        }
        
        if ($user->isEmailExists($email)) {
            throw new Exception('Email —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è');
        }
        
        // –°–¢–ê–†–´–ô —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è (–±–µ–∑ email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏)
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);
        
        $query = "INSERT INTO users (username, password, role, first_name, last_name, email, email_verified) 
                  VALUES (:username, :password, 'teacher', :first_name, :last_name, :email, 1)";
        $stmt = $db->prepare($query);
        
        $stmt->bindParam(':username', $username);
        $stmt->bindParam(':password', $hashed_password);
        $stmt->bindParam(':first_name', $first_name);
        $stmt->bindParam(':last_name', $last_name);
        $stmt->bindParam(':email', $email);
        
        if ($stmt->execute()) {
            $message = "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ! (–±–µ–∑ email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏)";
        } else {
            throw new Exception('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
        
    } catch (Exception $e) {
        $error = "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage();
        echo "<pre>–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:\n" . $e->getTraceAsString() . "</pre>";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 600px; margin: 20px auto; padding: 20px; }
        .form-group { margin-bottom: 15px; }
        .form-group label { display: block; margin-bottom: 5px; font-weight: bold; }
        .form-group input { width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px; }
        .btn { background: #007bff; color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; }
        .success { background: #d4edda; color: #155724; padding: 10px; border-radius: 4px; margin: 10px 0; }
        .error { background: #f8d7da; color: #721c24; padding: 10px; border-radius: 4px; margin: 10px 0; }
    </style>
</head>
<body>
    <h1>üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</h1>
    <p>–≠—Ç–æ—Ç —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ë–ï–ó email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.</p>
    
    <?php if ($message): ?>
        <div class="success"><?php echo $message; ?></div>
    <?php endif; ?>
    
    <?php if ($error): ?>
        <div class="error"><?php echo $error; ?></div>
    <?php endif; ?>
    
    <form method="POST">
        <div class="form-group">
            <label>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</label>
            <input type="text" name="username" required>
        </div>
        
        <div class="form-group">
            <label>–ü–∞—Ä–æ–ª—å:</label>
            <input type="password" name="password" required>
        </div>
        
        <div class="form-group">
            <label>–ò–º—è:</label>
            <input type="text" name="first_name" required>
        </div>
        
        <div class="form-group">
            <label>–§–∞–º–∏–ª–∏—è:</label>
            <input type="text" name="last_name" required>
        </div>
        
        <div class="form-group">
            <label>Email:</label>
            <input type="email" name="email" required>
        </div>
        
        <button type="submit" name="test_register" class="btn">–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</button>
    </form>
    
    <hr>
    <p><a href="debug_registration.php">üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</a></p>
    <p><a href="login.php">üè† –û—Å–Ω–æ–≤–Ω–∞—è —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞</a></p>
</body>
</html>
