<?php
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É users
 * 
 * –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î
 */

session_start();
require_once '../config/database.php';

// –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
$allowed_ips = ['127.0.0.1', '::1', 'localhost'];
$user_ip = $_SERVER['REMOTE_ADDR'] ?? '';

if (!in_array($user_ip, $allowed_ips) && !isset($_GET['force'])) {
    die('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ ?force=1');
}

$database = new Database();
$db = $database->getConnection();

if (!$database->isConnected()) {
    die('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ' . $database->getError());
}

$success_messages = [];
$error_messages = [];
$rollback_needed = false;

try {
    // –ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    $db->beginTransaction();
    
    echo "<!DOCTYPE html>
    <html lang='ru'>
    <head>
        <meta charset='UTF-8'>
        <meta name='viewport' content='width=device-width, initial-scale=1.0'>
        <title>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email</title>
        <style>
            body { font-family: Arial, sans-serif; max-width: 800px; margin: 20px auto; padding: 20px; }
            .success { background: #d4edda; color: #155724; padding: 10px; border-radius: 5px; margin: 10px 0; }
            .error { background: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px; margin: 10px 0; }
            .info { background: #d1ecf1; color: #0c5460; padding: 10px; border-radius: 5px; margin: 10px 0; }
            .warning { background: #fff3cd; color: #856404; padding: 10px; border-radius: 5px; margin: 10px 0; }
            pre { background: #f8f9fa; padding: 10px; border-radius: 5px; overflow-x: auto; }
            .button { background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 10px 5px 10px 0; }
            .button.danger { background: #dc3545; }
        </style>
    </head>
    <body>
        <h1>üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email</h1>
        <p><strong>–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</strong> " . date('Y-m-d H:i:s') . "</p>";

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ–π
    echo "<h2>üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã</h2>";
    
    $query = "SHOW COLUMNS FROM users";
    $stmt = $db->prepare($query);
    $stmt->execute();
    $existing_columns = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    $column_names = array_column($existing_columns, 'Field');
    
    echo "<div class='info'>";
    echo "<h3>–¢–µ–∫—É—â–∏–µ –ø–æ–ª—è —Ç–∞–±–ª–∏—Ü—ã users:</h3>";
    echo "<pre>" . implode(', ', $column_names) . "</pre>";
    echo "</div>";
    
    // –ü–æ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    $fields_to_add = [
        'email_verified' => [
            'definition' => 'TINYINT(1) DEFAULT 0',
            'description' => '–°—Ç–∞—Ç—É—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email (0 - –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, 1 - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω)'
        ],
        'verification_token' => [
            'definition' => 'VARCHAR(255) NULL',
            'description' => '–¢–æ–∫–µ–Ω –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email'
        ],
        'verification_token_expires' => [
            'definition' => 'DATETIME NULL',
            'description' => '–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'
        ],
        'last_verification_sent' => [
            'definition' => 'DATETIME NULL',
            'description' => '–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'
        ]
    ];
    
    echo "<h2>üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π</h2>";
    
    foreach ($fields_to_add as $field_name => $field_info) {
        if (in_array($field_name, $column_names)) {
            echo "<div class='warning'>‚ö†Ô∏è –ü–æ–ª–µ <strong>$field_name</strong> —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º</div>";
            continue;
        }
        
        try {
            $alter_query = "ALTER TABLE users ADD COLUMN $field_name {$field_info['definition']}";
            $stmt = $db->prepare($alter_query);
            $stmt->execute();
            
            echo "<div class='success'>‚úÖ –ü–æ–ª–µ <strong>$field_name</strong> —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ<br>";
            echo "<small>{$field_info['description']}</small></div>";
            $success_messages[] = "–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ: $field_name";
            
        } catch (PDOException $e) {
            $error_message = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è $field_name: " . $e->getMessage();
            echo "<div class='error'>‚ùå $error_message</div>";
            $error_messages[] = $error_message;
            $rollback_needed = true;
            break;
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    echo "<h2>üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤</h2>";
    
    $indexes_to_add = [
        'idx_verification_token' => 'verification_token',
        'idx_email_verified' => 'email_verified'
    ];
    
    foreach ($indexes_to_add as $index_name => $column) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏–Ω–¥–µ–∫—Å
            $check_index = "SHOW INDEX FROM users WHERE Key_name = '$index_name'";
            $stmt = $db->prepare($check_index);
            $stmt->execute();
            
            if ($stmt->rowCount() > 0) {
                echo "<div class='warning'>‚ö†Ô∏è –ò–Ω–¥–µ–∫—Å <strong>$index_name</strong> —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º</div>";
                continue;
            }
            
            $create_index = "ALTER TABLE users ADD INDEX $index_name ($column)";
            $stmt = $db->prepare($create_index);
            $stmt->execute();
            
            echo "<div class='success'>‚úÖ –ò–Ω–¥–µ–∫—Å <strong>$index_name</strong> —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω</div>";
            $success_messages[] = "–°–æ–∑–¥–∞–Ω –∏–Ω–¥–µ–∫—Å: $index_name";
            
        } catch (PDOException $e) {
            $error_message = "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–∞ $index_name: " . $e->getMessage();
            echo "<div class='error'>‚ùå $error_message</div>";
            $error_messages[] = $error_message;
            // –ò–Ω–¥–µ–∫—Å—ã –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        }
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è email –æ—Ç–ø—Ä–∞–≤–æ–∫
    echo "<h2>üìß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ª–æ–≥–æ–≤ email</h2>";
    
    try {
        $create_log_table = "
        CREATE TABLE IF NOT EXISTS email_verification_logs (
            id INT AUTO_INCREMENT PRIMARY KEY,
            user_id INT NOT NULL,
            email VARCHAR(255) NOT NULL,
            token VARCHAR(255) NOT NULL,
            sent_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            verified_at DATETIME NULL,
            ip_address VARCHAR(45) NULL,
            user_agent TEXT NULL,
            status ENUM('sent', 'verified', 'expired', 'failed') DEFAULT 'sent',
            INDEX idx_user_id (user_id),
            INDEX idx_token (token),
            INDEX idx_status (status),
            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4";
        
        $stmt = $db->prepare($create_log_table);
        $stmt->execute();
        
        echo "<div class='success'>‚úÖ –¢–∞–±–ª–∏—Ü–∞ <strong>email_verification_logs</strong> —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞</div>";
        $success_messages[] = "–°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –ª–æ–≥–æ–≤ email";
        
    } catch (PDOException $e) {
        $error_message = "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã –ª–æ–≥–æ–≤: " . $e->getMessage();
        echo "<div class='error'>‚ùå $error_message</div>";
        $error_messages[] = $error_message;
        // –¢–∞–±–ª–∏—Ü–∞ –ª–æ–≥–æ–≤ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    }
    
    if ($rollback_needed) {
        $db->rollback();
        echo "<div class='error'>";
        echo "<h2>üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω –æ—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π</h2>";
        echo "<p>–ò–∑-–∑–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—ã–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã.</p>";
        echo "</div>";
    } else {
        $db->commit();
        echo "<div class='success'>";
        echo "<h2>üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</h2>";
        echo "<p>–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.</p>";
        echo "</div>";
    }
    
} catch (Exception $e) {
    $db->rollback();
    echo "<div class='error'>";
    echo "<h2>‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞</h2>";
    echo "<p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: " . $e->getMessage() . "</p>";
    echo "<p>–í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã.</p>";
    echo "</div>";
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
echo "<h2>üìä –ò—Ç–æ–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</h2>";

if (!empty($success_messages)) {
    echo "<div class='success'>";
    echo "<h3>‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ:</h3>";
    echo "<ul>";
    foreach ($success_messages as $message) {
        echo "<li>$message</li>";
    }
    echo "</ul>";
    echo "</div>";
}

if (!empty($error_messages)) {
    echo "<div class='error'>";
    echo "<h3>‚ùå –û—à–∏–±–∫–∏:</h3>";
    echo "<ul>";
    foreach ($error_messages as $message) {
        echo "<li>$message</li>";
    }
    echo "</ul>";
    echo "</div>";
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
echo "<h2>üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã</h2>";

try {
    $query = "SHOW COLUMNS FROM users";
    $stmt = $db->prepare($query);
    $stmt->execute();
    $final_columns = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<div class='info'>";
    echo "<h3>–¢–µ–∫—É—â–∏–µ –ø–æ–ª—è —Ç–∞–±–ª–∏—Ü—ã users –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π:</h3>";
    echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
    echo "<tr><th>–ü–æ–ª–µ</th><th>–¢–∏–ø</th><th>Null</th><th>–ö–ª—é—á</th><th>–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é</th></tr>";
    
    foreach ($final_columns as $column) {
        $highlight = in_array($column['Field'], array_keys($fields_to_add)) ? 'background: #d4edda;' : '';
        echo "<tr style='$highlight'>";
        echo "<td>{$column['Field']}</td>";
        echo "<td>{$column['Type']}</td>";
        echo "<td>{$column['Null']}</td>";
        echo "<td>{$column['Key']}</td>";
        echo "<td>{$column['Default']}</td>";
        echo "</tr>";
    }
    echo "</table>";
    echo "</div>";
    
} catch (PDOException $e) {
    echo "<div class='error'>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: " . $e->getMessage() . "</div>";
}

echo "<h2>üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</h2>";
echo "<div class='info'>";
echo "<ol>";
echo "<li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</li>";
echo "<li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email</li>";
echo "<li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é email –≤ <code>config/email_config.php</code></li>";
echo "<li>–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</li>";
echo "</ol>";
echo "</div>";

// –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
echo "<div style='margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd;'>";
echo "<a href='../teacher/dashboard.php' class='button'>üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</a>";
echo "<a href='rollback_email_verification.php' class='button danger' onclick='return confirm(\"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?\")'>üóëÔ∏è –û—Ç–∫–∞—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</a>";
echo "</div>";

// –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ—Ç–∫–∞—Ç–∞
$rollback_script = '<?php
/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–∫–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email
 */

session_start();
require_once "../config/database.php";

$database = new Database();
$db = $database->getConnection();

if (!$database->isConnected()) {
    die("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: " . $database->getError());
}

try {
    $db->beginTransaction();
    
    echo "<!DOCTYPE html><html><head><meta charset=\"UTF-8\"><title>–û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π</title></head><body>";
    echo "<h1>–û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email</h1>";
    
    // –£–¥–∞–ª—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—è
    $fields_to_remove = ["email_verified", "verification_token", "verification_token_expires", "last_verification_sent"];
    
    foreach ($fields_to_remove as $field) {
        try {
            $query = "ALTER TABLE users DROP COLUMN $field";
            $stmt = $db->prepare($query);
            $stmt->execute();
            echo "<p>‚úÖ –ü–æ–ª–µ $field —É–¥–∞–ª–µ–Ω–æ</p>";
        } catch (Exception $e) {
            echo "<p>‚ö†Ô∏è –ü–æ–ª–µ $field –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ</p>";
        }
    }
    
    // –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–æ–≥–æ–≤
    try {
        $query = "DROP TABLE IF EXISTS email_verification_logs";
        $stmt = $db->prepare($query);
        $stmt->execute();
        echo "<p>‚úÖ –¢–∞–±–ª–∏—Ü–∞ email_verification_logs —É–¥–∞–ª–µ–Ω–∞</p>";
    } catch (Exception $e) {
        echo "<p>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã –ª–æ–≥–æ–≤: " . $e->getMessage() . "</p>";
    }
    
    $db->commit();
    echo "<p><strong>–û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!</strong></p>";
    echo "<a href=\"email_verification_setup.php\">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É</a>";
    
} catch (Exception $e) {
    $db->rollback();
    echo "<p>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–∞—Ç–∞: " . $e->getMessage() . "</p>";
}

echo "</body></html>";
?>';

file_put_contents('rollback_email_verification.php', $rollback_script);

echo "<p style='margin-top: 20px; color: #666; font-size: 0.9em;'>";
echo "üìù –°–∫—Ä–∏–ø—Ç –æ—Ç–∫–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω: <code>rollback_email_verification.php</code><br>";
echo "üïí –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: " . date('Y-m-d H:i:s') . "<br>";
echo "üè∑Ô∏è –í–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞: 1.0";
echo "</p>";

echo "</body></html>";
?>
